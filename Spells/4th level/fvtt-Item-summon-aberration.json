{
  "name": "Summon Aberration",
  "type": "spell",
  "img": "icons/magic/unholy/silhouette-evil-horned-giant.webp",
  "data": {
    "description": {
      "value": "<div class=\"rd__b  rd__b--3\">\n<p>You call forth an aberrant spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the <span style=\"font-family:var(--font-primary);font-size:var(--font-size-14)\">@Actor[STSidwap3lNQ6lRG]{Aberrant Spirit}</span><span style=\"font-family:var(--font-primary);font-size:var(--font-size-14)\"> stat block. When you cast the spell, choose Beholderkin, Slaad, or Star Spawn. The creature resembles an aberration of that kind, which determines certain traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.</span></p>\n<div class=\"rd__spc-inline-post\"> </div>\n<p>The creature is an ally to you and your companions. In combat, the creature shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action required by you). If you don't issue any, it takes the @action[Dodge] action and uses its move to avoid danger.</p>\n</div>\n<div class=\"rd__b  rd__b--3\">\n<div class=\"rd__b  rd__b--3\"><span class=\"rd__h rd__h--3\" data-title-index=\"1\"> <span class=\"entry-title-inner\">At Higher Levels.</span></span>\n<p>When you cast this spell using a spell slot of 5th level or higher, use the higher level wherever the spell's level appears in the stat block.</p>\n<div class=\"rd__spc-inline-post\"> </div>\n</div>\n<div class=\"rd__spc-inline-post\"> </div>\n</div>",
      "chat": "",
      "unidentified": ""
    },
    "source": "TCE",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "hour"
    },
    "target": {
      "value": 0,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": 90,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": null,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "level": 4,
    "school": "con",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "a pickled tentacle and an eyeball in a platinum-inlaid vial worth at least 400 gp",
      "consumed": false,
      "cost": 400,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "effects": [],
  "flags": {
    "srd5e": {
      "page": "spells.html",
      "source": "TCE",
      "hash": "summon%20aberration_tce",
      "propDroppable": "spell"
    },
    "scene-packer": {
      "hash": "fe17fcc0be2f47b5ef66aa1c08556d3107a66a81",
      "sourceId": "Item.MV2A5rk9gFRHm0J9"
    },
    "spell-class-filter-for-5e": {
      "parentClass": ""
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Summon Aberration",
          "type": "script",
          "author": "MuzJosUsP2lgs8yW",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "/*\nOriginal Code taken from Kuffeh1's Summon Beast Spell Macro:\nhttps://github.com/Kuffeh1/Foundry/blob/main/Spells/Level%202/Summon%20Beast\n\nModified by DarkDragonMC for Summon Aberrant Spell Macro.\n\nModules Used - MidiQOL, ItemMacro, Warpgate, JB2A (Free or Patreon), Sequencer [for the effects, optional]\n\nSet Up - You need to ensure you have an actor called 'Aberrant Spirit'\n\nMidiQOL OnUse -  ItemMacro - before active effect\n*/\n\nconst casterToken = game.actors.get(args[0].actor._id);\nconst tokenD = canvas.tokens.get(args[0].tokenId);\nconst spelllevel = args[0].spellLevel;\nconst level = casterToken.data.data.details.level;\n\n// create menu options\nlet choices = await warpgate.dialog([\n\n    {\n        type: 'header',\n        label: `Type`\n    },\n    {\n        type: 'radio',\n        label: `Slaad`,\n    },\n    {\n        type: 'radio',\n        label: `Star Spawn`,\n    },\n    {\n        type: 'radio',\n        label: `Beholderkin`,\n    },\n],\n    \"⚔️ Choose your spirit:\",\n    \"Call Forth!\")\n\nlet spiritArray = [choices[1], choices[2], choices[3]];\nspiritArray = spiritArray.filter(Boolean);\nlet summon = spiritArray[0];\n\n// Name of Actor that will be used\nconst summonType = `Aberrant Spirit`;\n\nlet upcastHP = ' ';\nif (spelllevel >= 3) { upcastHP = `${((spelllevel - 3) * 10)}`; }\n\nlet spiritHP = ' ';\nif (spelllevel < 3) { spiritHP = parseInt(30) }\nif (spelllevel >= 3) { spiritHP = parseInt(30) + parseInt(upcastHP); }\n\nlet spiritImg = '';\n\nif (summon === 'Slaad') { spiritImg = 'https://i.imgur.com/VzO6Cfn.png'; }\nif (summon === 'Star Spawn') { spiritImg = 'https://i.imgur.com/Regbgsk.png'; }\nif (summon === 'Beholderkin') { spiritImg = 'https://i.imgur.com/IvtYjz3.png'; }\n\n// selects which token is created based on which option was chosen. \nlet updates = {}\nif (summon === 'Slaad') { // Summons a Slaad Aberrant Spirit Token\n    updates = {\n        token: {\n            'img': spiritImg,\n            'name': `${summon} Aberrant Spirit of ${casterToken.name}`,\n        },\n        actor: {\n            'name': `${summon} Aberrant Spirit of ${casterToken.name}`,\n            'data.attributes.ac.formula': 11 + spelllevel,\n            'data.attributes.hp': { value: spiritHP, max: spiritHP },\n            'data.details.cr': level,\n            'data.attributes.movement': { walk: 30, fly: 30, hover: false },\n        },\n\n        embedded: {\n            Item: {\n                \"Multiattack\":\n                    { 'name': `Multiattack (${Math.floor(spelllevel / 2)} attacks)` },\n                \"Claws (Slaad Only)\":\n                    { 'data.damage.parts': ['1d10 + @mod + ${spelllevel}', 'slashing'] },\n\n                \"Eye Ray (Beholderkin Only)\": warpgate.CONST.DELETE,\n                \"Psychic Slam (Star Spawn Only)\": warpgate.CONST.DELETE,\n                \"Whispering Aura (Star Spawn Only)\": warpgate.CONST.DELETE\n            }\n        },\n    }\n}\nif (summon === 'Star Spawn') { // Summons a Star Spawn Aberrant Spirit Token\n\n    updates = {\n        token: {\n            'img': spiritImg,\n            'name': `${summon} Aberrant Spirit of ${casterToken.name}`,\n        },\n        actor: {\n            'name': `${summon} Aberrant Spirit of ${casterToken.name}`,\n            'data.attributes.ac.formula': 11 + spelllevel,\n            'data.attributes.hp': { value: spiritHP, max: spiritHP },\n            'data.details.cr': level,\n            'data.attributes.movement': { walk: 30, fly: 30, hover: false },\n        },\n\n        embedded: {\n            Item: {\n                \"Multiattack\":\n                    { 'name': `Multiattack (${Math.floor(spelllevel / 2)} attacks)` },\n                \"Psychic Slam (Star Spawn Only)\":\n                    { 'data.damage.parts': ['1d8 + @mod + ${spelllevel}', 'psychic'] },\n\n                \"Eye Ray (Beholderkin Only)\": warpgate.CONST.DELETE,\n                \"Claws (Slaad Only)\": warpgate.CONST.DELETE,\n                \"Regeneration (Slaad Only)\": warpgate.CONST.DELETE\n            }\n        },\n    }\n}\n\nif (summon === 'Beholderkin') { // Summons a Beholderkin Aberrant Spirit Token\n\n    updates = {\n        token: {\n            'img': spiritImg,\n            'name': `${summon} Aberrant Spirit of ${casterToken.name}`,\n        },\n        actor: {\n            'name': `${summon} Aberrant Spirit of ${casterToken.name}`,\n            'data.attributes.ac.formula': 11 + spelllevel,\n            'data.attributes.hp': { value: spiritHP, max: spiritHP },\n            'data.details.cr': level,\n            'data.attributes.movement': { walk: 30, fly: 30, hover: true },\n        },\n\n        embedded: {\n            Item: {\n                \"Multiattack\":\n                    { 'name': `Multiattack (${Math.floor(spelllevel / 2)} attacks)` },\n                \"Eye Ray (Beholderkin Only)\":\n                    { 'data.damage.parts': ['1d8 + @mod + ${spelllevel}', 'psychic'] },\n\n                \"Claws (Slaad Only)\": warpgate.CONST.DELETE,\n                \"Psychic Slam (Star Spawn Only)\": warpgate.CONST.DELETE,\n                \"Regeneration (Slaad Only)\": warpgate.CONST.DELETE,\n                \"Whispering Aura (Star Spawn Only)\": warpgate.CONST.DELETE\n            }\n        },\n    }\n}\n\n\n\nasync function myEffectFunction(template) {\n\n    let effect = ' ';\n    if (summon === 'Slaad') { effect = 'modules/JB2A_DnD5e/Library/Generic/Impact/PartSideImpactSmoke02_01_Regular_Blue_600x600.webm'; }\n    if (summon === 'Star Spawn') { effect = 'modules/JB2A_DnD5e/Library/Generic/Impact/GroundCrackImpact_01_Regular_Orange_600x600.webm'; }\n    if (summon === 'Beholderkin') { effect = 'modules/JB2A_DnD5e/Library/Generic/Liquid/LiquidSplash01_Regular_Blue_400x400.webm'; }\n\n    //prep summoning area\n    new Sequence()\n        .effect()\n        .file(effect)\n        .atLocation(template)\n        .center()\n        .scale(0.3)\n        //.belowTokens()\n        .play()\n}\n\nasync function postEffects(template, token) {\n    //bring in our token\n    new Sequence()\n        .animation()\n        .on(token)\n        .fadeIn(1500)\n        .play()\n}\n\nconst callbacks = {\n    pre: async (template, update) => {\n        myEffectFunction(template);\n        await warpgate.wait(500);\n    },\n    post: async (template, token) => {\n        postEffects(template, token);\n        await warpgate.wait(500);\n    }\n};\n\nconst options = { controllingActor: actor };\n\nawait warpgate.spawn(summonType, updates, callbacks, options);",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "exportSource": {
      "world": "the-unknown-future",
      "system": "dnd5e",
      "coreVersion": "9.269",
      "systemVersion": "1.6.3"
    }
  }
}